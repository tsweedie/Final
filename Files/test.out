
######################################################################
##########################~ finalized_model.sav ~#####################
######################################################################

######################################################################
#############################~SVM Grid Search~########################
######################################################################
	 Parameter Grid:
[{'kernel': ['linear'], 'C': [1, 10, 100, 1000]}, {'kernel': ['rbf'], 'C': [1, 10, 100, 1000], 'gamma': [0.001, 0.0001]}]

######################################################################
##########################~SVM Cross Validation~######################
######################################################################
	 Cross validation scores: 	[ 0.8362069   0.81578947  0.87272727]
	 Cross validation Accuracy:	 0.84 (+/- 0.05)

######################################################################
#############################~SVM Train~##############################
######################################################################
	 Best score for classifier:	0.774509803922
	 Best C:	1
	 Best Kernel:	linear
	 Best Gamma:	auto
	 SVM Best Estimator:	SVC(C=1, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='linear',
  max_iter=-1, probability=True, random_state=None, shrinking=True,
  tol=0.001, verbose=False)

	 SVM Grid Scores: 
{'std_train_score': array([ 0.        ,  0.        ,  0.        ,  0.        ,  0.00393505,
        0.00082485,  0.        ,  0.01080308,  0.        ,  0.        ,
        0.        ,  0.        ]), 'rank_test_score': array([ 1,  1,  1,  1, 11, 11,  9, 10,  7,  5,  7,  5], dtype=int32), 'split0_train_score': array([ 1.        ,  1.        ,  1.        ,  1.        ,  0.25373134,
        0.24626866,  1.        ,  0.29104478,  1.        ,  1.        ,
        1.        ,  1.        ]), 'split1_train_score': array([ 1.        ,  1.        ,  1.        ,  1.        ,  0.25185185,
        0.24444444,  1.        ,  0.26666667,  1.        ,  1.        ,
        1.        ,  1.        ]), 'param_gamma': masked_array(data = [-- -- -- -- 0.001 0.0001 0.001 0.0001 0.001 0.0001 0.001 0.0001],
             mask = [ True  True  True  True False False False False False False False False],
       fill_value = ?)
, 'split2_train_score': array([ 1.        ,  1.        ,  1.        ,  1.        ,  0.24460432,
        0.24460432,  1.        ,  0.28776978,  1.        ,  1.        ,
        1.        ,  1.        ]), 'std_score_time': array([ 0.0026929 ,  0.00453775,  0.00303022,  0.00368386,  0.00150182,
        0.00235995,  0.00164332,  0.00234549,  0.00220445,  0.00489877,
        0.00338656,  0.00651079]), 'split2_test_score': array([ 0.76923077,  0.76923077,  0.76923077,  0.76923077,  0.24615385,
        0.24615385,  0.73846154,  0.27692308,  0.75384615,  0.76923077,
        0.75384615,  0.75384615]), 'mean_score_time': array([ 0.13589263,  0.13906264,  0.13751133,  0.13681968,  0.13972028,
        0.13876033,  0.13799802,  0.13907027,  0.13858   ,  0.14079237,
        0.14127469,  0.14345407]), 'mean_fit_time': array([ 2.49982436,  2.49794602,  2.47832568,  2.46606263,  2.636343  ,
        2.48354928,  2.56689938,  2.49091729,  2.56031593,  2.54808855,
        2.58718204,  2.58360926]), 'param_kernel': masked_array(data = ['linear' 'linear' 'linear' 'linear' 'rbf' 'rbf' 'rbf' 'rbf' 'rbf' 'rbf'
 'rbf' 'rbf'],
             mask = [False False False False False False False False False False False False],
       fill_value = ?)
, 'param_C': masked_array(data = [1 10 100 1000 1 1 10 10 100 100 1000 1000],
             mask = [False False False False False False False False False False False False],
       fill_value = ?)
, 'std_test_score': array([ 0.00585857,  0.00585857,  0.00585857,  0.00585857,  0.00162216,
        0.00162216,  0.01970835,  0.01512864,  0.00755103,  0.01324701,
        0.00755103,  0.01172449]), 'mean_train_score': array([ 1.        ,  1.        ,  1.        ,  1.        ,  0.2500625 ,
        0.24510581,  1.        ,  0.28182708,  1.        ,  1.        ,
        1.        ,  1.        ]), 'split0_test_score': array([ 0.77142857,  0.77142857,  0.77142857,  0.77142857,  0.24285714,
        0.24285714,  0.78571429,  0.24285714,  0.77142857,  0.78571429,
        0.77142857,  0.77142857]), 'mean_test_score': array([ 0.7745098 ,  0.7745098 ,  0.7745098 ,  0.7745098 ,  0.24509804,
        0.24509804,  0.75980392,  0.25490196,  0.76470588,  0.76960784,
        0.76470588,  0.76960784]), 'params': [{'kernel': 'linear', 'C': 1}, {'kernel': 'linear', 'C': 10}, {'kernel': 'linear', 'C': 100}, {'kernel': 'linear', 'C': 1000}, {'kernel': 'rbf', 'C': 1, 'gamma': 0.001}, {'kernel': 'rbf', 'C': 1, 'gamma': 0.0001}, {'kernel': 'rbf', 'C': 10, 'gamma': 0.001}, {'kernel': 'rbf', 'C': 10, 'gamma': 0.0001}, {'kernel': 'rbf', 'C': 100, 'gamma': 0.001}, {'kernel': 'rbf', 'C': 100, 'gamma': 0.0001}, {'kernel': 'rbf', 'C': 1000, 'gamma': 0.001}, {'kernel': 'rbf', 'C': 1000, 'gamma': 0.0001}], 'std_fit_time': array([ 0.06482362,  0.09026613,  0.09556302,  0.06578203,  0.08656943,
        0.11411648,  0.06701747,  0.08452132,  0.0658896 ,  0.10046597,
        0.11208869,  0.0644923 ]), 'split1_test_score': array([ 0.7826087 ,  0.7826087 ,  0.7826087 ,  0.7826087 ,  0.24637681,
        0.24637681,  0.75362319,  0.24637681,  0.76811594,  0.75362319,
        0.76811594,  0.7826087 ])}

######################################################################
#############################~SVM Predict~############################
######################################################################
SVM Classification Report:
             precision    recall  f1-score   support

      Angry       0.74      0.82      0.78        17
    Disgust       1.00      0.92      0.96        24
       Fear       0.86      0.60      0.71        10
      Happy       0.93      1.00      0.96        27
    Neutral       0.67      0.71      0.69        14
        Sad       0.75      0.82      0.78        11
   Surprise       1.00      0.97      0.98        33

avg / total       0.89      0.88      0.88       136

SVM Confusion Matrix:
[[ 0  0  0  0  0  0  0]
 [ 0 14  0  0  0  3  0]
 [ 0  1 22  0  1  0  0]
 [ 0  1  0  6  0  1  2]
 [ 0  0  0  0 27  0  0]
 [ 0  2  0  1  1 10  0]
 [ 0  1  0  0  0  1  9]]
	 SVM Accuracy Score: 0.882352941176
file: Files/dataCsv.csv

######################################################################
##########################~ myHogfinalized_model.sav ~#####################
######################################################################

######################################################################
#############################~SVM Grid Search~########################
######################################################################
	 Parameter Grid:
[{'kernel': ['linear'], 'C': [1, 10, 100, 1000]}, {'kernel': ['rbf'], 'C': [1, 10, 100, 1000], 'gamma': [0.001, 0.0001]}]

######################################################################
##########################~SVM Cross Validation~######################
######################################################################
	 Cross validation scores: 	[ 0.80172414  0.85087719  0.8       ]
	 Cross validation Accuracy:	 0.82 (+/- 0.05)

######################################################################
#############################~SVM Train~##############################
######################################################################
	 Best score for classifier:	0.686274509804
	 Best C:	1
	 Best Kernel:	linear
	 Best Gamma:	auto
	 SVM Best Estimator:	SVC(C=1, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='linear',
  max_iter=-1, probability=True, random_state=None, shrinking=True,
  tol=0.001, verbose=False)

	 SVM Grid Scores: 
{'std_train_score': array([ 0.        ,  0.        ,  0.        ,  0.        ,  0.00082485,
        0.00082485,  0.0103623 ,  0.00082485,  0.        ,  0.01058578,
        0.        ,  0.        ]), 'rank_test_score': array([ 1,  1,  1,  1, 10, 10,  9, 10,  6,  8,  1,  6], dtype=int32), 'split0_train_score': array([ 1.        ,  1.        ,  1.        ,  1.        ,  0.24626866,
        0.24626866,  0.58955224,  0.24626866,  1.        ,  0.58955224,
        1.        ,  1.        ]), 'split1_train_score': array([ 1.        ,  1.        ,  1.        ,  1.        ,  0.24444444,
        0.24444444,  0.61481481,  0.24444444,  1.        ,  0.61481481,
        1.        ,  1.        ]), 'param_gamma': masked_array(data = [-- -- -- -- 0.001 0.0001 0.001 0.0001 0.001 0.0001 0.001 0.0001],
             mask = [ True  True  True  True False False False False False False False False],
       fill_value = ?)
, 'split2_train_score': array([ 1.        ,  1.        ,  1.        ,  1.        ,  0.24460432,
        0.24460432,  0.60431655,  0.24460432,  1.        ,  0.5971223 ,
        1.        ,  1.        ]), 'std_score_time': array([ 0.00185824,  0.00129195,  0.001418  ,  0.00106565,  0.00090686,
        0.00105495,  0.00187879,  0.00321818,  0.00133593,  0.00141111,
        0.00363395,  0.00242284]), 'split2_test_score': array([ 0.70769231,  0.70769231,  0.70769231,  0.70769231,  0.24615385,
        0.24615385,  0.52307692,  0.24615385,  0.70769231,  0.52307692,
        0.70769231,  0.70769231]), 'mean_score_time': array([ 0.07177242,  0.06924502,  0.06920664,  0.06971828,  0.07129463,
        0.07167935,  0.0709757 ,  0.073855  ,  0.07139222,  0.07081866,
        0.07285555,  0.07233667]), 'mean_fit_time': array([ 1.2477893 ,  1.2281944 ,  1.23120872,  1.22450566,  1.23210772,
        1.16638366,  1.23263129,  1.23541768,  1.27004631,  1.23218036,
        1.29476611,  1.30739395]), 'param_kernel': masked_array(data = ['linear' 'linear' 'linear' 'linear' 'rbf' 'rbf' 'rbf' 'rbf' 'rbf' 'rbf'
 'rbf' 'rbf'],
             mask = [False False False False False False False False False False False False],
       fill_value = ?)
, 'param_C': masked_array(data = [1 10 100 1000 1 1 10 10 100 100 1000 1000],
             mask = [False False False False False False False False False False False False],
       fill_value = ?)
, 'std_test_score': array([ 0.03484359,  0.03484359,  0.03484359,  0.03484359,  0.00162216,
        0.00162216,  0.01937856,  0.00162216,  0.04168327,  0.01815296,
        0.03484359,  0.04168327]), 'mean_train_score': array([ 1.        ,  1.        ,  1.        ,  1.        ,  0.24510581,
        0.24510581,  0.60289453,  0.24510581,  1.        ,  0.60049645,
        1.        ,  1.        ]), 'split0_test_score': array([ 0.71428571,  0.71428571,  0.71428571,  0.71428571,  0.24285714,
        0.24285714,  0.48571429,  0.24285714,  0.71428571,  0.5       ,
        0.71428571,  0.71428571]), 'mean_test_score': array([ 0.68627451,  0.68627451,  0.68627451,  0.68627451,  0.24509804,
        0.24509804,  0.49509804,  0.24509804,  0.68137255,  0.5       ,
        0.68627451,  0.68137255]), 'params': [{'kernel': 'linear', 'C': 1}, {'kernel': 'linear', 'C': 10}, {'kernel': 'linear', 'C': 100}, {'kernel': 'linear', 'C': 1000}, {'kernel': 'rbf', 'C': 1, 'gamma': 0.001}, {'kernel': 'rbf', 'C': 1, 'gamma': 0.0001}, {'kernel': 'rbf', 'C': 10, 'gamma': 0.001}, {'kernel': 'rbf', 'C': 10, 'gamma': 0.0001}, {'kernel': 'rbf', 'C': 100, 'gamma': 0.001}, {'kernel': 'rbf', 'C': 100, 'gamma': 0.0001}, {'kernel': 'rbf', 'C': 1000, 'gamma': 0.001}, {'kernel': 'rbf', 'C': 1000, 'gamma': 0.0001}], 'std_fit_time': array([ 0.03149769,  0.04128805,  0.03974479,  0.0372732 ,  0.04371149,
        0.04102978,  0.037577  ,  0.04209744,  0.03696816,  0.03838226,
        0.04893478,  0.02795708]), 'split1_test_score': array([ 0.63768116,  0.63768116,  0.63768116,  0.63768116,  0.24637681,
        0.24637681,  0.47826087,  0.24637681,  0.62318841,  0.47826087,
        0.63768116,  0.62318841])}

######################################################################
#############################~SVM Predict~############################
######################################################################
SVM Classification Report:
             precision    recall  f1-score   support

      Angry       0.67      0.82      0.74        17
    Disgust       0.87      0.83      0.85        24
       Fear       0.67      0.60      0.63        10
      Happy       0.93      0.93      0.93        27
    Neutral       0.60      0.64      0.62        14
        Sad       0.67      0.55      0.60        11
   Surprise       1.00      0.97      0.98        33

avg / total       0.83      0.82      0.82       136

SVM Confusion Matrix:
[[ 0  0  0  0  0  0  0]
 [ 0 14  1  0  0  2  0]
 [ 0  2 20  0  1  1  0]
 [ 0  1  0  6  0  0  3]
 [ 0  0  1  1 25  0  0]
 [ 0  2  1  1  1  9  0]
 [ 0  2  0  0  0  3  6]]
	 SVM Accuracy Score: 0.823529411765
file: Files/myHogDataCsv.csv
